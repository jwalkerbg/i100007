[tool.poetry]
name = "pymodule"
version = "0.1.0"
description = "A sample project driven by poetry, using Cython"
authors = ["Ivan Cenov <i_cenov@botevgrad.com>"]
readme = "README.md"
packages = [{include = "pymodule", from = "src"}]
include = [
    "pyproject.toml",
    "build.py",
    "MANIFEST.in",
    "README.md",
    "src/pymodule/cyth/*",
    "src/pymodule/c_ext/cmodulea/*",
    "src/pymodule/c_ext/cmoduleb/*"
]  # Compiled extensions

[tool.poetry.dependencies]
python = ">=3.12"
cython = ">=3.0"
setuptools = ">=68.0.0"
tomli = { version = "*", markers = "python_version < '3.11'" }
numpy = "*"
importlib = "*"
paho-mqtt = "*"
jsonschema = "*"
rfc3986 = "*"

[tool.poetry.group.dev.dependencies]
mypy = "^1.5.1"  # Static type checker

[tool.poetry.group.test.dependencies]
pytest = ">=8.0.0"
pytest-cov = ">=6.0.0"
pytest-mock = ">=3.0.0"

[tool.poetry.scripts]
pymodule = "pymodule.cli.app:main"

[tool.build.config]
cython_path = "src/pymodule/cyth"
c_ext_path = "src/pymodule/c_ext"

[build-system]
requires = ["poetry-core", "setuptools", "Cython"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.build]
generate-setup-file = true
script = 'build.py'

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = "src"
